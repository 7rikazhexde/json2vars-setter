[tool.poetry]
name = "json2vars-setter"
version = "1.0.2"
description = "JSON to Variables Setter (json2vars-setter) is a GitHub Action that parses a JSON file and sets its values as output variables (such as operating systems, Python versions, and GitHub Pages branch) in GitHub Actions workflows."
authors = ["7rikazhexde"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
poetry = "^2.1.4"
requests = "^2.32.5"
typer = "^0.17.4"


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pre-commit = "^4.3.0"
pytest-cov = "^6.3.0"
pytest-xdist = "^3.8.0"
pytest-html = "^4.1.1"
pytest-mock = "^3.15.0"
pytest-testmon = "^2.1.3"
ruff = "^0.12.12"
mypy = "^1.17.1"
taskipy = "^1.14.1"
mkdocs-material = "^9.6.19"
mkdocs-glightbox = "^0.5.1"
mkdocs-git-revision-date-localized-plugin = "^1.4.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E402", "E501"]
per-file-ignores = {}

[tool.mypy]
files = ["json2vars_setter", "tests", "scripts"]
python_version = "3.12"
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.pytest.ini_options]
testpaths = ["json2vars_setter", "tests"]
pythonpath = ["."]

# Enable log output during test execution.
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"

filterwarnings = [
    "ignore::DeprecationWarning:typer.*:",
]

[tool.taskipy.tasks]
testcoverage = "pytest --cov=json2vars_setter --cov-branch --cov-report term-missing --cov-report html"
testcoverageverbose = "pytest -s -vv --cov=json2vars_setter --cov-branch --cov-report term-missing --cov-report html"
testhtmlreport = "pytest --html=htmlcov/report_page.html"
testcixml = "python scripts/run_tests.py --report xml"
testciterm = "python scripts/run_tests.py --report term"
usage = "python json2vars_setter/cache_version_info.py --help\n\npython json2vars_setter/update_matrix_dynamic.py --help\n\n"

[tool.coverage.run]
source = ["json2vars_setter"]
# explicitly false to address compatibility issues with testmon and pytest-cov
# testmon and pytest-cov both use internal tracing mechanisms to track Python code execution.
# When branch coverage is enabled, pytest-cov provides more detailed tracing, but conflicts with testmon's behavior. This is a limitation of testmon.
branch = false

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
    "def main",
    "@abstractmethod",
    "abc.abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"

[tool.poetry.scripts]
json2vars = "json2vars_setter.cli:app"
